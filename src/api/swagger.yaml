openapi: 3.0.3
info:
  title: Lynx
  description: |-
    This is the API documentation for [Lynx](https://github.com/Lynx-Shortener/Lynx)
    
    Some useful links:
    - [GitHub](https://github.com/Lynx-Shortener/Lynx)
    - [Demo](https://demo.jck.cx)
  contact:
    email: lynx@jackbailey.dev
  version: 1.0.0
servers:
  - url: https://demo.jck.cx/api
tags:
  - name: links
paths:
  /link:
    get:
      tags:
        - links
      summary: Get an existing link by slug
      requestBody:
        description: Delete links with IDs c8b326c4-3a57-4ef6-945a-63fbffa12128, 1627244f-5277-4754-8c37-588ed83fd746, 18f84397-1933-4d3b-95d8-09d979da5bed
        content:
          application/json:
            schema:
              type: object
              properties:
                  ids:
                    type: array
                    items:
                      type: string
                    parameters:
                      - name: "test"
                  slug:
                    type: string
                    example: "donate"
                  destination:
                    type: string
                    example: "https://github.com/sponsors/JackBailey"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the request was successful and the link was found
                  result:
                    type: object
                    description: The user name.
        '404':
          description: Slug not found
    delete:
      tags:
        - links
      summary: Delete existing links by id
      parameters:
        - in: query
          name: slug
          schema:
            type: string
          description: The slug of the link to be retrieved
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: If the request was successful and the link was found
                  result:
                    type: object
                    description: The user name.
        '404':
          description: Slug not found
    
    post:
      tags:
        - links
      summary: Create a new link
      requestBody:
        description: Create a new link with slug "donate" with destination "https://github.com/sponsors/JackBailey"
        content:
          application/json:
            schema:
              type: object
              properties:
                  slug:
                    type: string
                    example: "donate"
                  destination:
                    type: string
                    example: "https://github.com/sponsors/JackBailey"

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: true
                  result:
                    type: object
                    $ref: '#/components/schemas/Link'

        '409':
          description: Conflict
          content:
            application/json:
              examples:
                "Slug Exists":
                  value:
                    success: false
                    message: "A link with that slug already exists"
                "Destination Exists":
                  description: "Only when URL_ONLY_UNIQUE enabled"
                  value:
                    success: false
                    message: "A link with that destination already exists"            

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                "Invalid Slug Format":
                  value:
                    success: false
                    message: "Invalid slug"
                "Invalid Destination Format":
                  value:
                    success: false
                    message: "Invalid destination url format"

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal Server Error when updating link
        
      security:
        - cookieAuth:
            - write:links
            - read:links
    patch:
      tags:
        - links
      summary: Update an existing link
      requestBody:
        description: Rename the slug of link with ID c8b326c4-3a57-4ef6-945a-63fbffa12128 to donate
        content:
          application/json:
            schema:
              type: object
              properties:
                  id:
                    type: string
                    example: "ded79006-0fe4-4b14-a737-d92053042e58"
                  slug:
                    type: string
                    example: "donate"
                  destination:
                    type: string
                    example: "https://github.com/sponsors/JackBailey"

          
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: true
                  result:
                    type: object
                    $ref: '#/components/schemas/Link'

        '403':
          description: Invalid permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: false
                  message: 
                    type: string
                    example: "You do not have the permissions to edit this link"

        '404':
          description: Invalid id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: false
                  message: 
                    type: string
                    example: "A link with that id does not exist"

        '409':
          description: Conflict
          content:
            application/json:
              examples:
                "Slug Exists":
                  value:
                    success: false
                    message: "A link with that slug already exists"
                "Destination Exists":
                  description: "Only when URL_ONLY_UNIQUE enabled"
                  value:
                    success: false
                    message: "A link with that destination already exists"            

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              examples:
                "Invalid Slug Format":
                  value:
                    success: false
                    message: "Invalid slug"
                "Invalid Destination Format":
                  value:
                    success: false
                    message: "Invalid destination"

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal Server Error when updating link
        
      security:
        - cookieAuth:
            - write:links
            - read:links
  /link/single:
    get:
      tags:
        - links
      summary: Get a single link by id
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: The id of the link to be retrieved
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: If the request was successful and the link was found
                  result:
                    type: object
                    $ref: '#/components/schemas/Link'

        '404':
          description: Invalid id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: false
                  message: 
                    type: string
                    example: "A link with that id does not exist"
          
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Internal Server Error when getting link

      security:
        - cookieAuth:
            - write:links
            - read:links
    
components:
  schemas:
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "c8b326c4-3a57-4ef6-945a-63fbffa12128"
        slug:
          type: string
          example: donate
        destination:
          type: string
          example: "https://github.com/sponsors/JackBailey"
        author:
          type: string
          format: uuid
          example: "ded79006-0fe4-4b14-a737-d92053042e58"
        creationDate:
          type: string
          format: date-time
          example: "2022-07-05T22:05:43.401Z"
        modifiedDate:
          type: string
          format: date-time
          example: "2022-07-05T22:05:43.401Z"
        visits:
          type: integer
          format: int64
          example: 23563
      xml:
        name: order
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "ded79006-0fe4-4b14-a737-d92053042e58"
        username:
          type: string
          example: admin
        password:
          type: string
          format: bycrypt
          example: "$2a$12$wGTIjdoXtDwraLkRwx5aUO/LX6CJ3RjS5YI0NXQHE9HbyCL3CMx9m"
        email:
          type: string
          example: john@email.com
        role:
          type: string
          example: "admin"
        secret:
          type: string
        totp:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            secret:
              type: string
            backupCodes:
              type: array
              items:
                type: string
                example: "USDAHFOIUHDFSUI"
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        result:
          $ref: '#/components/schemas/Link'
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    api_key:
      type: apiKey
      name: api_key
      in: header